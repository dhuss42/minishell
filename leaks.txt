<------------------------------------------------>

minishell: echo hello | grep h | cat -e | cat -e | cat -e
==717== Syscall param dup2(oldfd) contains uninitialised byte(s)
==717==    at 0x49A6A17: dup2 (syscall-template.S:120)
==717==    by 0x10DD19: check_builtins (builtins.c:83)
==717==    by 0x111164: pipe_child (exec_pipe.c:116)
==717==    by 0x1112D9: pipechain_loop (exec_pipe.c:148)
==717==    by 0x1116CF: execute_pipechain (executor.c:31)
==717==    by 0x111ABD: executor (executor.c:134)
==717==    by 0x1093C6: minishell_loop (minishell.c:36)
==717==    by 0x109477: main (minishell.c:61)
==717==
==717== Syscall param dup2(oldfd) contains uninitialised byte(s)
==717==    at 0x49A6A17: dup2 (syscall-template.S:120)
==717==    by 0x10DD2C: check_builtins (builtins.c:84)
==717==    by 0x111164: pipe_child (exec_pipe.c:116)
==717==    by 0x1112D9: pipechain_loop (exec_pipe.c:148)
==717==    by 0x1116CF: execute_pipechain (executor.c:31)
==717==    by 0x111ABD: executor (executor.c:134)
==717==    by 0x1093C6: minishell_loop (minishell.c:36)
==717==    by 0x109477: main (minishell.c:61)
==717==
==717==
==717== HEAP SUMMARY:
==717==     in use at exit: 228,456 bytes in 245 blocks
==717==   total heap usage: 579 allocs, 334 frees, 246,090 bytes allocated
==717==
==717== LEAK SUMMARY:
==717==    definitely lost: 0 bytes in 0 blocks
==717==    indirectly lost: 0 bytes in 0 blocks
==717==      possibly lost: 0 bytes in 0 blocks
==717==    still reachable: 228,456 bytes in 245 blocks
==717==         suppressed: 0 bytes in 0 blocks
==717== Reachable blocks (those to which a pointer was found) are not shown.
==717== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==717==
==717== Use --track-origins=yes to see where uninitialised values come from
==717== For lists of detected and suppressed errors, rerun with: -s
==717== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
hello$$$

<------------------------------------------------>


$EMPTY echo hi

bash output = (hi)

--> problem is in the parser/expansion
--> in the args double char Empty becomes an empty string
--> the logic of the tester is probably replacing the string altogether

minishell:
    [0] $EMPTY  ->  [0] ()
    [1] echo    ->  [1] echo
    [2] hi      ->  [2] hi

tester expectation:
    [0] $EMPTY  ->  [0] echo
    [1] echo    ->  [1] hi
    [2] hi      ->

<------------------------------------------------>

<------------------------------------------------->

137 and 142
    -> captial N for (no such file or directory)


<------------------------------------------------>

minishell: echo hello | grep h | cat -e | cat -e | cat -e
==717== Syscall param dup2(oldfd) contains uninitialised byte(s)
==717==    at 0x49A6A17: dup2 (syscall-template.S:120)
==717==    by 0x10DD19: check_builtins (builtins.c:83)
==717==    by 0x111164: pipe_child (exec_pipe.c:116)
==717==    by 0x1112D9: pipechain_loop (exec_pipe.c:148)
==717==    by 0x1116CF: execute_pipechain (executor.c:31)
==717==    by 0x111ABD: executor (executor.c:134)
==717==    by 0x1093C6: minishell_loop (minishell.c:36)
==717==    by 0x109477: main (minishell.c:61)
==717==
==717== Syscall param dup2(oldfd) contains uninitialised byte(s)
==717==    at 0x49A6A17: dup2 (syscall-template.S:120)
==717==    by 0x10DD2C: check_builtins (builtins.c:84)
==717==    by 0x111164: pipe_child (exec_pipe.c:116)
==717==    by 0x1112D9: pipechain_loop (exec_pipe.c:148)
==717==    by 0x1116CF: execute_pipechain (executor.c:31)
==717==    by 0x111ABD: executor (executor.c:134)
==717==    by 0x1093C6: minishell_loop (minishell.c:36)
==717==    by 0x109477: main (minishell.c:61)
==717==
==717==
==717== HEAP SUMMARY:
==717==     in use at exit: 228,456 bytes in 245 blocks
==717==   total heap usage: 579 allocs, 334 frees, 246,090 bytes allocated
==717==
==717== LEAK SUMMARY:
==717==    definitely lost: 0 bytes in 0 blocks
==717==    indirectly lost: 0 bytes in 0 blocks
==717==      possibly lost: 0 bytes in 0 blocks
==717==    still reachable: 228,456 bytes in 245 blocks
==717==         suppressed: 0 bytes in 0 blocks
==717== Reachable blocks (those to which a pointer was found) are not shown.
==717== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==717==
==717== Use --track-origins=yes to see where uninitialised values come from
==717== For lists of detected and suppressed errors, rerun with: -s
==717== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
hello$$$

<------------------------------------------------>


$EMPTY echo hi

bash output = (hi)

--> problem is in the parser/expansion
--> in the args double char Empty becomes an empty string
--> the logic of the tester is probably replacing the string altogether

minishell:
    [0] $EMPTY  ->  [0] ()
    [1] echo    ->  [1] echo
    [2] hi      ->  [2] hi

tester expectation:
    [0] $EMPTY  ->  [0] echo
    [1] echo    ->  [1] hi
    [2] hi      ->

<------------------------------------------------>

<------------------------------------------------->

137 and 142
    -> captial N for (no such file or directory)

<-------------------------------------------------->

minishell: export PATH=lexer:parser
minishell: lexer
==721== Invalid read of size 1
==721==    at 0x113FA2: word_count (in /dorker_workspace/circle_3/minishell/minishell)
==721==    by 0x1141CA: ft_split (in /dorker_workspace/circle_3/minishell/minishell)
==721==    by 0x111EFA: get_path (find_path.c:113)
==721==    by 0x111715: get_check_path (executor_utils.c:59)
==721==    by 0x111A5E: execute_single_command (executor.c:92)
==721==    by 0x111BA2: executor (executor.c:132)
==721==    by 0x1093D7: minishell_loop (minishell.c:32)
==721==    by 0x109491: main (minishell.c:56)
==721==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==721==
==721==
==721== Process terminating with default action of signal 11 (SIGSEGV)
==721==  Access not within mapped region at address 0x0
==721==    at 0x113FA2: word_count (in /dorker_workspace/circle_3/minishell/minishell)
==721==    by 0x1141CA: ft_split (in /dorker_workspace/circle_3/minishell/minishell)
==721==    by 0x111EFA: get_path (find_path.c:113)
==721==    by 0x111715: get_check_path (executor_utils.c:59)
==721==    by 0x111A5E: execute_single_command (executor.c:92)
==721==    by 0x111BA2: executor (executor.c:132)
==721==    by 0x1093D7: minishell_loop (minishell.c:32)
==721==    by 0x109491: main (minishell.c:56)
==721==  If you believe this happened as a result of a stack
==721==  overflow in your program's main thread (unlikely but
==721==  possible), you can try to increase the size of the
==721==  main thread stack using the --main-stacksize= flag.
==721==  The main thread stack size used in this run was 8388608.
==721==
==721== HEAP SUMMARY:
==721==     in use at exit: 234,375 bytes in 293 blocks
==721==   total heap usage: 1,031 allocs, 738 frees, 258,709 bytes allocated
==721==
==721== LEAK SUMMARY:
==721==    definitely lost: 0 bytes in 0 blocks
==721==    indirectly lost: 0 bytes in 0 blocks
==721==      possibly lost: 0 bytes in 0 blocks
==721==    still reachable: 234,375 bytes in 293 blocks
==721==         suppressed: 0 bytes in 0 blocks
==721== Reachable blocks (those to which a pointer was found) are not shown.
==721== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==721==
==721== For lists of detected and suppressed errors, rerun with: -s
==721== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault

<------------------------------------------------------------>

minishell: cat | cat | ls
REDIRECT INPUT 18
REDIRECT INPUT 20
Makefile   environment  expansion             lexer      minishell.c  minishell_memory     parser         print_tokenlist.c  test_cases.txt
README.md  errors       leaks.txt             libft      minishell.h  minishell_structs.h  print_table.c  print_tokenlist.o
builtins   executor     leaks_and_issues.txt  minishell  minishell.o  minishell_tester     print_table.o  signals

<------------------------------------------------------------>

exit should always print exit even if it does not exit

-> exit is printed before the error message

<----------------------------------------------------------->

minishell: cat < Makefile | grep m | cat -e | cat -e | cat -e > out >>outi >>outmax
==762== Invalid read of size 8
==762==    at 0x1110CE: duplicate_fd (exec_pipe.c:86)
==762==    by 0x11133A: pipe_child (exec_pipe.c:117)
==762==    by 0x1114F3: pipechain_loop (exec_pipe.c:154)
==762==    by 0x11189D: execute_pipechain (executor.c:31)
==762==    by 0x111BD4: executor (executor.c:137)
==762==    by 0x1093D7: minishell_loop (minishell.c:32)
==762==    by 0x109491: main (minishell.c:56)
==762==  Address 0x4b13c88 is 8 bytes before a block of size 40 alloc'd
==762==    at 0x48407B4: malloc (vg_replace_malloc.c:381)
==762==    by 0x110CD9: init_fd_pid (exec_fd_pid.c:50)
==762==    by 0x111828: execute_pipechain (executor.c:22)
==762==    by 0x111BD4: executor (executor.c:137)
==762==    by 0x1093D7: minishell_loop (minishell.c:32)
==762==    by 0x109491: main (minishell.c:56)
==762==
==762== Invalid write of size 4
==762==    at 0x112AD4: redirect_input (redirections.c:31)
==762==    by 0x111141: duplicate_fd (exec_pipe.c:86)
==762==    by 0x11133A: pipe_child (exec_pipe.c:117)
==762==    by 0x1114F3: pipechain_loop (exec_pipe.c:154)
==762==    by 0x11189D: execute_pipechain (executor.c:31)
==762==    by 0x111BD4: executor (executor.c:137)
==762==    by 0x1093D7: minishell_loop (minishell.c:32)
==762==    by 0x109491: main (minishell.c:56)
==762==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==762==
==762==
==762== Process terminating with default action of signal 11 (SIGSEGV)
==762==  Access not within mapped region at address 0x0
==762==    at 0x112AD4: redirect_input (redirections.c:31)
==762==    by 0x111141: duplicate_fd (exec_pipe.c:86)
==762==    by 0x11133A: pipe_child (exec_pipe.c:117)
==762==    by 0x1114F3: pipechain_loop (exec_pipe.c:154)
==762==    by 0x11189D: execute_pipechain (executor.c:31)
==762==    by 0x111BD4: executor (executor.c:137)
==762==    by 0x1093D7: minishell_loop (minishell.c:32)
==762==    by 0x109491: main (minishell.c:56)
==762==  If you believe this happened as a result of a stack
==762==  overflow in your program's main thread (unlikely but
==762==  possible), you can try to increase the size of the
==762==  main thread stack using the --main-stacksize= flag.
==762==  The main thread stack size used in this run was 8388608.
==762==
==762== HEAP SUMMARY:
==762==     in use at exit: 236,248 bytes in 384 blocks
==762==   total heap usage: 1,005 allocs, 621 frees, 257,125 bytes allocated
==762==
==762== 6 bytes in 6 blocks are definitely lost in loss record 5 of 114
==762==    at 0x48407B4: malloc (vg_replace_malloc.c:381)
==762==    by 0x4899338: xmalloc (in /usr/lib/x86_64-linux-gnu/libreadline.so.8.2)
==762==    by 0x486EFB9: readline_internal_teardown (in /usr/lib/x86_64-linux-gnu/libreadline.so.8.2)
==762==    by 0x48703DA: readline (in /usr/lib/x86_64-linux-gnu/libreadline.so.8.2)
==762==    by 0x10934D: minishell_loop (minishell.c:22)
==762==    by 0x109491: main (minishell.c:56)
==762==
==762== LEAK SUMMARY:
==762==    definitely lost: 6 bytes in 6 blocks
==762==    indirectly lost: 0 bytes in 0 blocks
==762==      possibly lost: 0 bytes in 0 blocks
==762==    still reachable: 236,242 bytes in 378 blocks
==762==         suppressed: 0 bytes in 0 blocks
==762== Reachable blocks (those to which a pointer was found) are not shown.
==762== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==762==
==762== For lists of detected and suppressed errors, rerun with: -s
==762== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
REDIRECT INPUT 3
REDIRECT INPUT 5
REDIRECT INPUT 7
REDIRECT INPUT 9

<----------------------------------------------------------->

Try ctrl-D after running a blocking command like cat without arguments or grep "something".

should it exit or should it give a new prompt?

