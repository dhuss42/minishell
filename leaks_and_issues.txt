
<------------------------------------------------------------------->
[1.]

Input
			minishell: ls non_existent_file 2> error.log | cat nonexistent_file | tr '[:lower:]' '[:upper:]' > output.log

minishell output:
			cat: nonexistent_file: No such file or directory
			ls: 2: No such file or directory
			ls: non_existent_file: No such file or directory

bash output:
			bash: cat: nonexistent_file: No such file or directory

 				[----- solution idea -----]
-> returning all errors but bash returns only the first (I think)

<------------------------------------------------------------------->

minishell: $EMPTY

output with debugging

exit_code is: 0
error here in executor
exit_code is: 13
error wrapped here

				[----- solution idea -----]
-> should be 0 but is set to 13 in executor

<------------------------------------------------------------------->
[3.]
	Minishell tester passes fewer tests with init terminal

<------------------------------------------------------------------->
env -i ./minishell (means run minishell without environment variables) - segmentation fault
POssible: check if env[0] exists (because env for sure exists).
Expected: probably some variables are still created; check the real bash by doing "env -i bash"

<------------------------------------------------------------------->
LS, ECHO, Ls, eCHo, etc etc (and in general commands are case insensitive)
should work. Check it before!
Solution: executor_utils.c @ line 46: when check access of F_OK, before that
just transform the command to lowercase.

<------------------------------------------------------------------->
Just check: what if every variable is unset?

<------------------------------------------------------------------->
export | grep USER or export | grep SHLVL or something else doesnt work
Really strange error: I thought it was related to stdin and stdout with builtins,
but with echo, pwd or others, it works correctly.

<------------------------------------------------------------------->
---end of Nico testing---
<------------------------------------------------------------------->
echoalskajsas
--> not printing error message

<------------------------------------------------------------------->
<------------------------------------------------------------------->
