
<------------------------------------------------------------------->
[1.]

Input
			minishell: ls non_existent_file 2> error.log | cat nonexistent_file | tr '[:lower:]' '[:upper:]' > output.log

minishell output:
			cat: nonexistent_file: No such file or directory
			ls: 2: No such file or directory
			ls: non_existent_file: No such file or directory

bash output:
			bash: cat: nonexistent_file: No such file or directory

 				[----- solution idea -----]
-> returning all errors but bash returns only the first (I think)

<------------------------------------------------------------------->
[2.]

Input:
			minishell: export t="cho hallo"
			minishell: e$t

minishell output:
			minishell: echo hallo: command not found

bash output:
			bash: hallo

 				[----- solution idea -----]
--> don't check for strlen = 4 before calling ft_echo

in the example e$t expands to a single string 'echo hallo'
-> meaning the strlen will be greater than 4
ft_echo has the strlen = 4 check implemented after splitting the strings in two separate string 'echo' and 'hallo'

<------------------------------------------------------------------->
[3.]

when in multiple minishells
running exit exits all shells not the current one

 				[----- solution idea -----]
-> instead of calling exit the function should set a value to true and return to the main loop
-> in main loop check if the value is true then return to main and return exit_code in main

<------------------------------------------------------------------->
[4.]

Input:
			minishell: cd /nonexistent

minishell output:
			minishell: /nonexistent: No such file or directory
			minishell: /nonexistent: No such file or directory
			minishell: cd: command not found

bash output:
			bash: cd: /nonexistent: No such file or directory

 				[----- solution idea -----]
built in errors are not handled correct in the print_error function

<------------------------------------------------------------------->

input:
			minishell: cd /nonexistent

minishell output:
			minishell: /nonexistent: No such file or directory
			minishell: /nonexistent: No such file or directory
			minishell: cd: command not found

==446==
==446== HEAP SUMMARY:
==446==     in use at exit: 232,889 bytes in 263 blocks
==446==   total heap usage: 544 allocs, 281 frees, 260,784 bytes allocated
==446==
==446== 37 bytes in 1 blocks are definitely lost in loss record 29 of 92
==446==    at 0x484582F: realloc (vg_replace_malloc.c:1437)
==446==    by 0x49A71A7: getcwd (getcwd.c:86)
==446==    by 0x10F58B: ft_cd (cd.c:66)
==446==    by 0x10D80C: builtins (builtins.c:17)
==446==    by 0x10D9ED: check_builtins (builtins.c:48)
==446==    by 0x1112D0: execute_single_command (executor.c:89)
==446==    by 0x11148A: executor (executor.c:127)
==446==    by 0x1093EB: minishell_loop (minishell.c:35)
==446==    by 0x1094B4: main (minishell.c:59)
==446==
==446== 37 bytes in 1 blocks are definitely lost in loss record 30 of 92
==446==    at 0x484582F: realloc (vg_replace_malloc.c:1437)
==446==    by 0x49A71A7: getcwd (getcwd.c:86)
==446==    by 0x10F58B: ft_cd (cd.c:66)
==446==    by 0x10D80C: builtins (builtins.c:17)
==446==    by 0x10DA2A: check_builtins (builtins.c:55)
==446==    by 0x1112D0: execute_single_command (executor.c:89)
==446==    by 0x11148A: executor (executor.c:127)
==446==    by 0x1093EB: minishell_loop (minishell.c:35)
==446==    by 0x1094B4: main (minishell.c:59)
==446==
==446== LEAK SUMMARY:
==446==    definitely lost: 74 bytes in 2 blocks
==446==    indirectly lost: 0 bytes in 0 blocks
==446==      possibly lost: 0 bytes in 0 blocks
==446==    still reachable: 232,815 bytes in 261 blocks
==446==         suppressed: 0 bytes in 0 blocks
==446== Reachable blocks (those to which a pointer was found) are not shown.
==446== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==446==
==446== For lists of detected and suppressed errors, rerun with: -s
==446== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


<------------------------------------------------------------------->
<------------------------------------------------------------------->
<------------------------------------------------------------------->
<------------------------------------------------------------------->