
<------------------------------------------------------------------->
[1.]

Input
			minishell: ls non_existent_file 2> error.log | cat nonexistent_file | tr '[:lower:]' '[:upper:]' > output.log

minishell output:
			cat: nonexistent_file: No such file or directory
			ls: 2: No such file or directory
			ls: non_existent_file: No such file or directory

bash output:
			bash: cat: nonexistent_file: No such file or directory

 				[----- solution idea -----]
-> returning all errors but bash returns only the first (I think)

<------------------------------------------------------------------->
[2.]

Input:
			minishell: export t="cho hallo"
			minishell: e$t

minishell output:
			minishell: echo hallo: command not found

bash output:
			bash: hallo

 				[----- solution idea -----]
--> don't check for strlen = 4 before calling ft_echo

in the example e$t expands to a single string 'echo hallo'
-> meaning the strlen will be greater than 4
ft_echo has the strlen = 4 check implemented after splitting the strings in two separate string 'echo' and 'hallo'

<------------------------------------------------------------------->


<------------------------------------------------------------------->
[4.]

Input:
			minishell: cd /nonexistent

minishell output:
			minishell: /nonexistent: No such file or directory
			minishell: /nonexistent: No such file or directory
			minishell: cd: command not found

bash output:
			bash: cd: /nonexistent: No such file or directory

 				[----- solution idea -----]
seems like cd is called multiple times here

<------------------------------------------------------------------->


<------------------------------------------------------------------->
<------------------------------------------------------------------->
<------------------------------------------------------------------->
<------------------------------------------------------------------->